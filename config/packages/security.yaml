security:
  enable_authenticator_manager: true

  password_hashers:
    App\Entity\User: 'auto'

  providers:
    app_user_provider:
      entity: { class: App\Entity\User, property: email }

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    registration:
      pattern: ^/api/users
      stateless: true
      methods: [POST]
    authentication:
      pattern: ^/api/authentication_token
      stateless: true
      user_checker: App\Security\UserChecker
      methods: [POST]
      json_login:
        check_path: /api/authentication_token
        username_path: email
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    authentication_refresh:
      pattern: ^/api/authentication_token/refresh
      stateless: true
      refresh_jwt: ~
    api:
      pattern: ^/api
      stateless: true
      jwt: ~
    main:
      lazy: true
      provider: app_user_provider

  access_control:
    - {path: ^/api/authentication_token, roles: PUBLIC_ACCESS},
    - {path: ^/api/authentication_token/refresh, roles: PUBLIC_ACCESS},
    - {path: ^/api/users, methods: [POST], roles: PUBLIC_ACCESS},
    - {
        path: ^/api/users,
        roles: IS_AUTHENTICATED_FULLY,
        methods: [GET, PUT, DELETE],
      },
    - {
        path: ^/api/customers,
        roles: IS_AUTHENTICATED_FULLY,
        methods: [GET, POST, PUT, DELETE],
      },
    - {
        path: ^/api/invoices,
        roles: IS_AUTHENTICATED_FULLY,
        methods: [GET, POST, PUT, DELETE],
      },
    - {
        path: ^/api/devis,
        roles: IS_AUTHENTICATED_FULLY,
        methods: [GET, POST, PUT, DELETE],
      }
